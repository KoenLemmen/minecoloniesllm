plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.163'
}

version = '1.0.0'
group = 'com.thereallemon.llmconversations'
base {
    archivesName = 'llmconversations'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

repositories {
    mavenCentral()
    maven {
        name = 'LDTTeam - Modding'
        url = 'https://ldtteam.jfrog.io/ldtteam/modding/'
    }
}

// Configuration for libraries to be included in the jar
configurations {
    shade
    implementation.extendsFrom shade
}

runs {
    configureEach {
        systemProperty 'forge.logging.console.level', 'debug'
        modSource project.sourceSets.main
    }
    
    client {
        systemProperty 'forge.enabledGameTestNamespaces', 'llmconversations'
    }
    
    server {
        systemProperty 'forge.enabledGameTestNamespaces', 'llmconversations'
        programArgument '--nogui'
    }
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
    
    // MineColonies API from LDTTeam Maven repository
    compileOnly "com.ldtteam:minecolonies:${minecolonies_version}"

    // BlockUI - required for MineColonies API (BOWindow class)
    compileOnly "com.ldtteam:blockui:${blockui_version}"

    // OkHttp for async HTTP requests - bundled into jar
    // Exclude JetBrains annotations to avoid module conflicts
    shade('com.squareup.okhttp3:okhttp:4.12.0') {
        exclude group: 'org.jetbrains', module: 'annotations'
    }
}

// Include shaded dependencies in the jar
tasks.named('jar', Jar) {
    from {
        configurations.shade.collect { it.isDirectory() ? it : zipTree(it) }
    }
    // Exclude JetBrains annotations to avoid module conflicts with other mods
    exclude 'org/jetbrains/annotations/**'
    exclude 'META-INF/versions/9/org/jetbrains/annotations/**'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
        minecraft_version: minecraft_version,
        minecraft_version_range: minecraft_version_range,
        neo_version: neo_version,
        neo_version_range: neo_version_range,
        loader_version_range: loader_version_range,
        mod_id: mod_id,
        mod_name: mod_name,
        mod_license: mod_license,
        mod_version: version,
        mod_authors: mod_authors,
        mod_description: mod_description
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/neoforge.mods.toml']) {
        expand replaceProperties
    }
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/repo"
        }
    }
}
