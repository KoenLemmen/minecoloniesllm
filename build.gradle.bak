plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.163'
}

version = '1.0.0'
group = 'com.thereallemon.llmconversations'

java.toolchain.languageVersion = JavaLanguageVersion.of(21)

repositories {
    mavenCentral()
    maven {
        name = "Ldtteam"
        url = "https://maven.ldtteam.com/"
    }
}

runs {
    configureEach {
        systemProperty 'forge.logging.console.level', 'debug'
        modSource project.sourceSets.main
    }
    
    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }
    
    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        programArgument '--nogui'
    }
}

mods {
    "${project.mod_id}" {
        sourceSet project.sourceSets.main
    }
}

minecraft {
    mappings channel: 'official', version: '1.21.1'
    
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            
            mods {
                llmconversations {
                    source sourceSets.main
                }
            }
        }
        
        server {
            workingDirectory project.file('run')
            property 'forge.logging.console.level', 'debug'
            
            mods {
                llmconversations {
                    source sourceSets.main
                }
            }
        }
    }
}

dependencies {
    implementation "net.neoforged:neoforge:21.1.80"
    
    // Minecolonies dependency (adjust version as needed)
    // Check https://maven.ldtteam.com/ for latest version
    implementation "com.ldtteam:minecolonies:1.21.1-1.1.718-snapshot"
    
    // HTTP client for API calls
    implementation 'com.squareup.okhttp3:okhttp:4.12.0'
    
    // JSON parsing (Gson already in Minecraft, but explicit for clarity)
    compileOnly 'com.google.code.gson:gson:2.10.1'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
