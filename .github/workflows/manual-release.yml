name: Manual Build and Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 1.0.0)'
        required: true
        type: string
      release_name:
        description: 'Release name (e.g., LLM Conversations v1.0.0)'
        required: true
        type: string
      release_notes:
        description: 'Release notes/changelog'
        required: false
        type: string
        default: 'New release'
      prerelease:
        description: 'Mark as pre-release'
        required: false
        type: boolean
        default: false

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Update version in gradle.properties
        run: |
          sed -i "s/mod_version=.*/mod_version=${{ github.event.inputs.version }}/" gradle.properties

      - name: Update version in build.gradle
        run: |
          sed -i "s/version = '.*'/version = '${{ github.event.inputs.version }}'/" build.gradle

      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      - name: List build artifacts
        run: ls -la build/libs/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.event.inputs.version }}
          release_name: ${{ github.event.inputs.release_name }}
          body: ${{ github.event.inputs.release_notes }}
          draft: false
          prerelease: ${{ github.event.inputs.prerelease }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/libs/llmconversations-${{ github.event.inputs.version }}.jar
          asset_name: llmconversations-${{ github.event.inputs.version }}.jar
          asset_content_type: application/java-archive

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: llmconversations-${{ github.event.inputs.version }}
          path: build/libs/*.jar
          retention-days: 30

